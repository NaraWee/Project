CREATE TABLE USER_INFORMATION
(
    USER_NO    NUMBER NOT NULL,
    USER_NICKNAME    VARCHAR2(100) NOT NULL,
    USER_ID    VARCHAR2(100) NOT NULL,
    USER_PWD    VARCHAR2(100) NOT NULL,
    PHONE    VARCHAR2(100) NOT NULL,
    EMAIL    VARCHAR2(100) NOT NULL,
    COIN    NUMBER DEFAULT 0 NOT NULL
);


COMMENT ON COLUMN USER_INFORMATION.USER_NO IS '회원번호';

COMMENT ON COLUMN USER_INFORMATION.USER_NICKNAME IS '회원닉네임';

COMMENT ON COLUMN USER_INFORMATION.USER_ID IS '회원아이디';

COMMENT ON COLUMN USER_INFORMATION.USER_PWD IS '회원비밀번호';

COMMENT ON COLUMN USER_INFORMATION.PHONE IS '전화번호';

COMMENT ON COLUMN USER_INFORMATION.EMAIL IS '이메일';

COMMENT ON COLUMN USER_INFORMATION.COIN IS '참치캔';

COMMENT ON TABLE USER_INFORMATION IS '회원정보';

CREATE UNIQUE INDEX 엔터티1_PK ON USER_INFORMATION
( USER_NO );

ALTER TABLE USER_INFORMATION
 ADD CONSTRAINT 엔터티1_PK PRIMARY KEY ( USER_NO )
 USING INDEX 엔터티1_PK;

ALTER TABLE USER_INFORMATION
ADD CONSTRAINT UK_USER_NICKNAME UNIQUE(USER_NICKNAME);


ALTER TABLE USER_INFORMATION
ADD CONSTRAINT UK_USER_ID UNIQUE(USER_ID);


CREATE SEQUENCE SQU_USER_INFORMATION
START WITH 1
INCREMENT BY 1
NOMAXVALUE
MINVALUE 1
NOCYCLE 
NOCACHE;





-------------------------------------------------------


CREATE TABLE FRIENDS_LIST
(
    FRIEND_LIST_NO    NUMBER NOT NULL,
    FRIEND_NO    NUMBER NOT NULL,
    USER_NO    NUMBER NOT NULL,
    
 CONSTRAINT UK_FRIEND_LIST_NO UNIQUE(FRIEND_LIST_NO),
 CONSTRAINT PK_USER_NO_FRIEND_NO PRIMARY KEY(USER_NO,FRIEND_NO),
 CONSTRAINT FK_USER_NO1 FOREIGN KEY(USER_NO) REFERENCES USER_INFORMATION(USER_NO),
 CONSTRAINT FK_FRIEND_NO1 FOREIGN KEY(FRIEND_NO) REFERENCES USER_INFORMATION(USER_NO)
);

COMMENT ON COLUMN FRIENDS_LIST.FRIEND_LIST_NO IS '친구목록번호';

COMMENT ON COLUMN FRIENDS_LIST.FRIEND_NO IS '친구번호';

COMMENT ON COLUMN FRIENDS_LIST.USER_NO IS '회원번호';

COMMENT ON TABLE FRIENDS_LIST IS '친구목록';

CREATE SEQUENCE SQU_FRIENDS_LIST
START WITH 1
INCREMENT BY 1
NOMAXVALUE
MINVALUE 1
NOCYCLE 
NOCACHE;




--------------------------------------------------------

CREATE TABLE BOARD_LIST
(
    BOARD_NO    NUMBER NOT NULL,
    TITLE    VARCHAR2(80) NOT NULL,
    BOARD_CONTENTS    VARCHAR2(1000) NOT NULL,
    USER_NO    NUMBER NOT NULL,
    LIST_NO    NUMBER NOT NULL,
    ENROLLDATE DATE DEFAULT SYSDATE NOT NULL,
    CONSTRAINT FK_USER_NO FOREIGN KEY(USER_NO) REFERENCES USER_INFORMATION(USER_NO)
);

COMMENT ON COLUMN BOARD_LIST.LIST_NO IS '게시글구분';

COMMENT ON COLUMN BOARD_LIST.TITLE IS '게시글제목';

COMMENT ON COLUMN BOARD_LIST.BOARD_CONTENTS IS '게시글내용';

COMMENT ON COLUMN BOARD_LIST.USER_NO IS '회원번호';

COMMENT ON COLUMN BOARD_LIST.BOARD_NO IS '게시글번호';

COMMENT ON COLUMN BOARD_LIST.ENROLLDATE IS '등록날짜';

COMMENT ON TABLE BOARD_LIST IS '게시글 목록';


CREATE UNIQUE INDEX 엔터티1_PK2 ON BOARD_LIST
( BOARD_NO );

ALTER TABLE BOARD_LIST
 ADD CONSTRAINT 엔터티1_PK2 PRIMARY KEY ( BOARD_NO )
 USING INDEX 엔터티1_PK2;


CREATE SEQUENCE SQU_BOARD_LIST
START WITH 1
INCREMENT BY 1
NOMAXVALUE
MINVALUE 1
NOCYCLE 
NOCACHE;




------------------------------------------------------------------------------



CREATE TABLE COMMENT_BOARD
(
    BOARD_NO    NUMBER NOT NULL,
    COMMENT_NO    NUMBER NOT NULL,
    COMMENT_CONTENT    VARCHAR2(200) NOT NULL,
    USER_NO    NUMBER NOT NULL,
    CONSTRAINT PK_NO PRIMARY KEY(COMMENT_NO),
    CONSTRAINT FK_BOARD_NO FOREIGN KEY(BOARD_NO) REFERENCES BOARD_LIST(BOARD_NO),
    CONSTRAINT FK_USER FOREIGN KEY(USER_NO) REFERENCES USER_INFORMATION(USER_NO)
);

COMMENT ON COLUMN COMMENT_BOARD.COMMENT_NO IS '댓글번호';

COMMENT ON COLUMN COMMENT_BOARD.COMMENT_CONTENT IS '댓글내용';

COMMENT ON COLUMN COMMENT_BOARD.USER_NO IS '회원번호';

COMMENT ON COLUMN COMMENT_BOARD.BOARD_NO IS '게시글번호';

COMMENT ON TABLE COMMENT_BOARD IS '댓글';

CREATE UNIQUE INDEX 엔터티1_PK3 ON COMMENT_BOARD
( BOARD_NO,COMMENT_NO );


CREATE SEQUENCE SQU_COMMENT
START WITH 1
INCREMENT BY 1
NOMAXVALUE
MINVALUE 1
NOCYCLE 
NOCACHE;




SELECT * FROM COMMENT_BOARD;



SELECT
       A.USER_NICKNAME
     , A.USER_NO
  FROM USER_INFORMATION A
  JOIN BOARD_LIST L ON (L.USER_NO = A.USER_NO)
 WHERE L.TITLE = '메밀꽃 필 무렵';
 
 
 -----------------------------------------------------
 
 CREATE TABLE STORE
(
    ITEM_NO    NUMBER NOT NULL,
    ITEM_NAME    VARCHAR2(100) NOT NULL,
    ITEM_PRICE    NUMBER NOT NULL,
    ITEM_IMG    VARCHAR2(100) NOT NULL,
    ITEM_CATEGORY    NUMBER NOT NULL
);
COMMENT ON COLUMN STORE.ITEM_NO IS '아이템번호';

COMMENT ON COLUMN STORE.ITEM_NAME IS '아이템내용';

COMMENT ON COLUMN STORE.ITEM_PRICE IS '아이템가격';

COMMENT ON COLUMN STORE.ITEM_IMG IS '아이템이미지';

COMMENT ON COLUMN STORE.ITEM_CATEGORY IS '아이템 카테고리';

COMMENT ON TABLE STORE IS '상점';

ALTER TABLE STORE ADD CONSTRAINT PK_ITEM_NO PRIMARY KEY(ITEM_NO);

CREATE SEQUENCE SQU_STORE
START WITH 1
INCREMENT BY 1
NOMAXVALUE
MINVALUE 1
NOCYCLE 
NOCACHE;



----------------------------------------------------------------------------
INSERT
  INTO STORE
 VALUES
 (
  1
, '찡긋.png'
, '1'
, '찡긋.png'
, 1
 );
INSERT
  INTO STORE
 VALUES
 (
  2
, '헤헷.png'
, '1'
, '헤헷.png'
, 1
 );
INSERT
  INTO STORE
 VALUES
 (
  3
, '호랑스키.png'
, '1'
, '호랑스키.png'
, 1
 );
INSERT
  INTO STORE
 VALUES
 (
  4
, '#ffdab9'
, '1'
, '살구색.png'
, 2
 );
INSERT
  INTO STORE
 VALUES
 (
  5
, '#ee82ee'
, '1'
, '핑크색.png'
, 2
 );
INSERT
  INTO STORE
 VALUES
 (
  6
, '#b0e0e6'
, '1'
, '하늘색.png'
, 2
 );
 INSERT
  INTO STORE
 VALUES
 (
  7
, '고딕체'
, '1'
, '고딕체.png'
, 3
 );
INSERT
  INTO STORE
 VALUES
 (
  8
, '휴먼편지체'
, '1'
, '휴먼편지체.png'
, 3
 );
 
INSERT
  INTO STORE
 VALUES
 (
  9
, '돋움체'
, '1'
, '돋움체.png'
, 3
 );

---------------------------------------------------------



CREATE TABLE USER_INVENTORY_LIST
(
  USER_NO NUMBER
, ITEM_NO NUMBER
, ITEM_CATEGORY NUMBER,
  CONSTRAINT PK_NO2 PRIMARY KEY(USER_NO, ITEM_NO),
  CONSTRAINT FK_USER_NO2 FOREIGN KEY(USER_NO) REFERENCES USER_INFORMATION(USER_NO),
  CONSTRAINT FK_ITEM_NO2 FOREIGN KEY(ITEM_NO) REFERENCES STORE(ITEM_NO)
);

ALTER TABLE USER_INVENTORY_LIST
ADD (EQUIP_ITEM_YN CHAR(1));



COMMENT ON COLUMN USER_INVENTORY_LIST.USER_NO IS '회원번호';

COMMENT ON COLUMN USER_INVENTORY_LIST.ITEM_NO IS '아이템번호';

COMMENT ON COLUMN USER_INVENTORY_LIST.ITEM_CATEGORY IS '아이템 카테고리';

COMMENT ON TABLE USER_INVENTORY_LIST IS '회원인벤토리목록';





CREATE TABLE PLUS_FRIEND
( USER_NO NUMBER NOT NULL
, REQUEST_FRIEND_NO NUMBER
, CONSTRAINT FK_USER_NO3 FOREIGN KEY(USER_NO) REFERENCES USER_INFORMATION(USER_NO)
, CONSTRAINT FK_USER_NO4 FOREIGN KEY(REQUEST_FRIEND_NO) REFERENCES USER_INFORMATION(USER_NO)
);

COMMENT ON COLUMN PLUS_FRIEND.USER_NO IS '회원번호';

COMMENT ON COLUMN PLUS_FRIEND.REQUEST_FRIEND_NO IS '요청친구번호';

COMMIT;











